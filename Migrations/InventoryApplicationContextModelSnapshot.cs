// <auto-generated />
using System;
using InventoryApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryApplication.Migrations
{
    [DbContext(typeof(InventoryApplicationContext))]
    partial class InventoryApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryApplication.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("d_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("d_name");

                    b.Property<int?>("ResponsibleEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("d_responsible");

                    b.HasKey("Id");

                    b.HasIndex("ResponsibleEmployeeId");

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("InventoryApplication.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("e_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("e_first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(127)")
                        .HasColumnName("e_last_name");

                    b.HasKey("Id");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("InventoryApplication.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("i_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("i_name");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nchar(127)")
                        .HasColumnName("i_sn");

                    b.HasKey("Id");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("InventoryApplication.Models.InventoryReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ir_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("ir_date");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("ir_inventory");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("ir_price");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("ir_supplier");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("inventory_receipt", (string)null);
                });

            modelBuilder.Entity("InventoryApplication.Models.InventoryTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("it_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("it_date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("it_department");

                    b.Property<int?>("DepartmentResponsibleEmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("it_department_responsible");

                    b.Property<int>("OperationId")
                        .HasColumnType("int")
                        .HasColumnName("it_operation");

                    b.Property<int>("SignatoryId")
                        .HasColumnType("int")
                        .HasColumnName("it_signatory");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DepartmentResponsibleEmployeeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SignatoryId");

                    b.ToTable("inventory_transfer", (string)null);
                });

            modelBuilder.Entity("InventoryApplication.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("o_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("o_name");

                    b.HasKey("Id");

                    b.ToTable("operation", (string)null);
                });

            modelBuilder.Entity("InventoryApplication.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("s_name");

                    b.HasKey("Id");

                    b.ToTable("supplier", (string)null);
                });

            modelBuilder.Entity("InventoryApplication.Models.Department", b =>
                {
                    b.HasOne("InventoryApplication.Models.Employee", "ResponsibleEmployee")
                        .WithMany()
                        .HasForeignKey("ResponsibleEmployeeId");

                    b.Navigation("ResponsibleEmployee");
                });

            modelBuilder.Entity("InventoryApplication.Models.InventoryReceipt", b =>
                {
                    b.HasOne("InventoryApplication.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryApplication.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("InventoryApplication.Models.InventoryTransfer", b =>
                {
                    b.HasOne("InventoryApplication.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryApplication.Models.Employee", "DepartmentResponsibleEmployee")
                        .WithMany()
                        .HasForeignKey("DepartmentResponsibleEmployeeId");

                    b.HasOne("InventoryApplication.Models.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryApplication.Models.Employee", "Signatory")
                        .WithMany()
                        .HasForeignKey("SignatoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("InventoryApplication.Models.InventoryTransfer.Inventory#InventoryApplication.Models.InventoryTransferList", "Inventory", b1 =>
                        {
                            b1.Property<int>("InventoryTransferId")
                                .HasColumnType("int")
                                .HasColumnName("itl_transfer");

                            b1.Property<int>("InventoryId")
                                .HasColumnType("int")
                                .HasColumnName("itl_inventory");

                            b1.HasKey("InventoryTransferId", "InventoryId");

                            b1.HasIndex("InventoryId");

                            b1.ToTable("inventory_transfer_list", (string)null);

                            b1.HasOne("InventoryApplication.Models.Inventory", "Inventory")
                                .WithMany()
                                .HasForeignKey("InventoryId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner("InventoryTransfer")
                                .HasForeignKey("InventoryTransferId");

                            b1.Navigation("Inventory");

                            b1.Navigation("InventoryTransfer");
                        });

                    b.Navigation("Department");

                    b.Navigation("DepartmentResponsibleEmployee");

                    b.Navigation("Inventory");

                    b.Navigation("Operation");

                    b.Navigation("Signatory");
                });
#pragma warning restore 612, 618
        }
    }
}
